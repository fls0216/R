서술형
-------
1/2. NCS

3. 기본 통계량 확인하는 함수 8개 이상
중간값: median()
평균값: mean()
분산: var()
표준편차: sd()
최대값: max()
최소값: min()
배열의 합: sum()
최대값과 최소값의 범위 : range()
분위수 : quantile() 
# sample(x, y) : x범위에서 y만큼 샘플데이터를 생성하는 함수
# order(vec)
# rank(vec)
# summary(vec)
# table(vec)

4. 전처리에서 어떤 작업을 하는지 5개 이상
1) 이상치 확인
2) 결측치 확인
3) 파생변수 확인

# filter()      : 행 추출 -> subset()
# select()      : 열 추출 -> data[, c('열이름', '열이름')]
# arrange()     : 정렬 -> order(), sort()
# mutate()      : 열 추가 -> transform()
# summarize()   : 통계치 산출 -> aggregate()
# groupby()     : 집단별로 나누기 -> subset(), tapply(), aggregate()
# left_join()   : 데이터 합치기(열) -> cbind()
# bind_rows()   : 데이터 합치기(행) -> rbind()

5. 컬럼명 변경

names(df_new1) <- c('v1', 'v2')

df_new2 <- rename(df_new2, v1=var1, v2=var2)

6. 코드 설명

7. 그래프 종류
1) plot() : 산점도, 산포도 (geom_point)
2) hist() : 히스토그램 (geom_bar)
3) boxplot() : 박스가 공중에 떠있는 그래프 (geom_boxplot)
4) barplot() : 막대그래프 (geom_col)
5) pie() : 파이그래프
6) geom_line : 선그래프

8. 용어 설명(분, 표)
 : 도수분포표(frequency table): 데이터를 구간으로 나누어, 각 구간의 빈도를 나타낸 표
-분산: 그 확률변수가 기대값으로부터 얼마나 떨어진 곳에 분포하는지를 가늠하는 숫자
-표준편차 : 분산에 제곱근을 취한 값

9. 자료구조 5가지에 대한 특징
1) 벡터(vector) : 벡터 데이터 구조는 숫자, 문자 등 원소들의 집합으로 이루어진 배열이다. 동일한 자료형의 값이 여러 개 연속되어 있다.

2) 행렬(matrix) : 행렬은 행렬은 행과 열로 이루어진 2차원의 데이터 형태이다.

3) 배열(array) : 배열은 2차원 데이터 구조를 쌓아 올린 형태로, 행렬 형태의 데이터를 층위별로 저장한다.

4) 데이터 프레임(data frame) : 행렬과는 다르게 각 열이 서로 다른 데이터 타입을 가질 수 있으나 각 열의 데이터 타입은 동일해야 한다.

5) 리스트(list) : 벡터와 비슷하나 벡터와 달리 여러 자료형의 데이터를 섞어서 저장할 수 있다.(벡터나 data frame 등도 원소로 저장 가능)

10. 행렬 계산

apply(x, 1, max) # 행 기준
apply(x, 2, max) # 열 기준

-----------------------------------------------------
실습형
-------
1. 남성과 여성의 평균 나이 차이 검정
# install.packages('moonBook')
library(moonBook)

?acs

# 귀무가설 : 남성과 여성의 평균나이에 대해 차이가 없다.
# 대립가설 : 남성과 여성의 평균나이에 대해 차이가 있다.

head(acs)
str(acs)

mean.man <- mean(acs$age[acs$sex=='Male'])
mean.woman <- mean(acs$age[acs$sex=='Female'])
cat(mean.man, mean.woman)

moonBook::densityplot(age ~ sex, data = acs)

# 정규분포 테스트
# 귀무가설 : 정규분포가 맞다 (p-value '0.05'보다 크다)
# 대립가설 : 정규분포가 아니다
shapiro.test(acs$age[acs$sex=='Male']) # 정규분포
shapiro.test(acs$age[acs$sex=='Female']) # 정규분포 X -> t-test 못쓴다

# 등분산 테스트
# 귀무가설 : 등분산이 맞다
# 대립가설 : 등분산이 아니다
var.test(age ~ sex, data = acs)
View(acs)

wilcox.test(age ~ sex, data = acs)
# p-value '0.05'보다 작다 : 대립가설 채택
t.test(age~sex, data = acs, var.test=T, alt='less') # p-value = 1
t.test(age~sex, data = acs, var.test=T, alt='greater')

t.test(age~sex, data = acs, var.test=T, alt='two.sided')
t.test(age~sex, data = acs, var.test=F)

2. one sample t-test

### 집단이 한 개인 경우
# A회사의 건전지 수명이 1000시간일 때 무작위로 뽑은 10개의 건전지 수명에 대해 샘플이 모집단과 다르다고 할 수 있는가?
# 귀무가설 : 모집단의 평균과 같다
# 대립가설 : 모집단의 평균과 다르다

a <- c(980, 1008, 968, 1032, 1012, 1002, 996, 1017, 990, 955)

mean.a <- mean(a)
mean.a

shapiro.test(a)
?t.test
t.test(a, mu=1000)

# 어떤 학급의 수학 평균성적이 55점이었다. 0교시 수업을 하고 다시 성적을 살펴보았다
# 귀무가설 : 변화가 없다
# 대립가설 : 변화가 있다
b <- c(58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39)

mean.b <- mean(b)
shapiro.test(b)
t.test(b, mu=55, alt='greater')
# p-value '0.4046' 변화가 없다

3. paired sample t-test


str(sleep)
View(sleep)

before <- subset(sleep, group==1, extra)
before
after <- subset(sleep, group==2, extra)
after

# install.packages('PairedData')
library(PairedData)

sleep2 <- paired(before, after)
sleep2
plot(sleep2, type='profile') + theme_bw()

shapiro.test(sleep$extra[sleep$group==1])

with(sleep, shapiro.test(extra[group==1]))
with(sleep, shapiro.test(extra[group==2]))

with(sleep, var.test(extra[group==1], extra[group==2]))

with(sleep, t.test(extra ~ group, data=sleep, paired = T))

4. one way anova

5. one way anova

## one way anova
library(moonBook)

View(acs)
# LDLC (저밀도 콜레스테롤 수치)
# Dx(진단 결과) : STEMI, NSTEMI, unstable angina

moonBook::densityplot(LDLC ~ Dx, data = acs)

with(acs, shapiro.test(LDLC[Dx=='NSTEMI'])) # 귀무가설 기각o. 정규분포 아니다
with(acs, shapiro.test(LDLC[Dx=='STEMI']))  # 기각 x, 정규 분포다
with(acs, shapiro.test(LDLC[Dx=='Unstable Angina'])) # 귀무가설 기각o. 정규분포 아니다

out = aov(LDLC ~ Dx, data = acs)
shapiro.test(resid(out))

# 등분산 검정
bartlett.test(LDLC ~ Dx, data = acs)

# 정규분포이고 등분산일 경우
out = aov(LDLC ~ Dx, data = acs)
summary(out)

# 연속변수가 아니거나 정규분포가 아닐 경우
kruskal.test(LDLC ~ Dx, data = acs)

# 등분산이 아닐 경우
oneway.test(LDLC ~ Dx, data = acs, var.equal = F)

### 사후 검정
# aov()를 사용했을 경우 : TukeyHSD()
TukeyHSD(out)

# kruskal.test()를 사용했을 경우
# install.packages('pgirmess')
library(pgirmess)
kruskalmc(acs$LDLC, acs$Dx)

str(InsectSprays)
View(InsectSprays)

moonBook::densityplot(count ~ spray, data = InsectSprays)
kruskalmc(InsectSprays$count, InsectSprays$spray)

# install.packages('userfriendlyscience')
library(userfriendlyscience)
posthocTGH(x = InsectSprays$spray, y = InsectSprays$count,
           method = 'games-howell')

# oneway.test()를 사용했을 때 사후 검정
# install.packages('nparcomp')
library(nparcomp)

result <- mctp(LDLC ~ Dx, data = acs)
summary(result)

# -----------------------------------------------------------

head(iris)
# 품종별로 Sepal.width의 평균 차이가 있는가? 만약 있다면 어느 품종과 차이가 있는가?

##--------------------------------------------------------------##
# 직접 해본 부분
out <- aov(Sepal.Width ~ Species, data = iris) # anova
out
shapiro.test(resid(out)) # 정규분포 O

bartlett.test(Sepal.Width ~ Species, data = iris) # 등분산 O

summary(out) # '***'라서 차이가 매우 크다

TukeyHSD(out) 
## --------------------------------------------------------------##

mydata <- read.csv('../data/anova_one_way.csv')
View(mydata)

# 시, 군, 구에 따라서 합계 출산율의 차이가 있는가? 있다면 어느것과 차이가 있는가?
out <- aov(birth_rate ~ ad_layer, data = mydata)
shapiro.test(resid(out))

kruskal.test(birth_rate ~ ad_layer, data = mydata)

posthocTGH(x = mydata$ad_layer, y = mydata$birth_rate,
           method = 'games-howell')

kruskalmc(mydata$birth_rate, mydata$ad_layer)